{"ast":null,"code":"var _jsxFileName = \"/home/mungaii/Desktop/MUNGAII/Web Development/Projects/facerecognition/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { Component } from 'react';\n// import './App.css';\n// import ParticlesBg from 'particles-bg';\n// import Navigation from './components/Navigation/Navigation';\n// import Logo from './components/Logo/Logo';\n// import Rank from './components/Rank/Rank';\n// import ImageProcessingField from './components/ImageProcessingField/ImageProcessingField';\n// import Facerecognition from './components/Facerecognition/Facerecognition';\n\n// const returnClarifaiRequestOptions = (imageUrl) => {\n//   // Your PAT (Personal Access Token) can be found in the Account's Security section\n//   const PAT = '70d2b99eec204856bc2886b35b22b05d';\n//   const USER_ID = 'ianthedeveloper';\n//   const APP_ID = 'my-first-application';\n//   const IMAGE_URL = imageUrl;\n\n//   const raw = JSON.stringify({\n//     \"user_app_id\": {\n//         \"user_id\": USER_ID,\n//         \"app_id\": APP_ID\n//     },\n//     \"inputs\": [\n//         {\n//             \"data\": {\n//                 \"image\": {\n//                     \"url\": IMAGE_URL\n//                     // \"base64\": IMAGE_BYTES_STRING\n//                 }\n//             }\n//         }\n//     ]\n//   });\n\n//   const requestOptions = {\n//   method: 'POST',\n//   headers: {\n//         'Accept': 'application/json',\n//         'Authorization': 'Key ' + PAT\n//     },\n//     body: raw\n//   };\n\n//   return requestOptions;\n\n// }\n\n// class App extends Component {\n//   constructor(){\n//     super();\n//     this.state = {\n//         input: '',\n//         imageUrl: '',\n//         box: {},\n//     }\n//   }\n\n//   calculateFaceLocation = (result) => {\n//     const faceData = result.outputs[0].data.regions[0].region_info.bounding_box;\n//     const imageInput = document.getElementById(\"imageInput\");\n//     const width = (imageInput.width);\n//     const height = (imageInput.height);\n\n//     return {\n//       leftCol: faceData.left_col * width,\n//       topRow: faceData.top_row * height,\n//       rightCol: width - (faceData.right_col * width),\n//       bottomRow: height - (faceData.bottom_row * height)\n//     }\n//   }\n\n//   displayFaceLocation = (box) => {\n//     console.log(\"Box:\", box)\n//     this.setState({box: box})\n//   }\n\n//   onInputChange = (event) => {\n//     // console.log(\"Input:\", event.target.value);\n//     this.setState({input: event.target.value});\n//   }\n\n//   onButtonSubmit = () => {\n//     const MODEL_ID = 'face-detection';\n//     const MODEL_VERSION_ID = '6dc7e46bc9124c5c8824be4822abe105';\n//     this.setState({imageUrl: this.state.input});\n\n//     fetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/versions/\" + MODEL_VERSION_ID + \"/outputs\", returnClarifaiRequestOptions(this.state.input))\n//     .then(response => response.json())\n//     .then(result => this.displayFaceLocation(this.calculateFaceLocation(result)))\n//     .catch(error => console.log('Ooops! There was an error', error));\n//   }\n\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <ParticlesBg className=\"particlesBg\" num={331} type=\"fountain\" bg={true} />\n//         <Navigation/>\n//         <Logo/>\n//         <Rank/>\n//         <ImageProcessingField \n//           onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}  \n//         />\n//         <Facerecognition box={this.state.box} imageUrl={this.state.imageUrl} />\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n\n//MY PLAYGROUND\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport ParticlesBg from 'particles-bg';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport Rank from './components/Rank/Rank';\nimport ImageProcessingField from './components/ImageProcessingField/ImageProcessingField';\nimport Facerecognition from './components/Facerecognition/Facerecognition';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst returnClarifaiRequestOptions = imageUrl => {\n  // Your PAT (Personal Access Token) can be found in the Account's Security section\n  const PAT = '70d2b99eec204856bc2886b35b22b05d';\n  const USER_ID = 'ianthedeveloper';\n  const APP_ID = 'my-first-application';\n  const IMAGE_URL = imageUrl;\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n      \"user_id\": USER_ID,\n      \"app_id\": APP_ID\n    },\n    \"inputs\": [{\n      \"data\": {\n        \"image\": {\n          \"url\": IMAGE_URL\n          // \"base64\": IMAGE_BYTES_STRING\n        }\n      }\n    }]\n  });\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT\n    },\n    body: raw\n  };\n  return requestOptions;\n};\nconst App = () => {\n  _s();\n  const [input, setInput] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [box, setBox] = useState({});\n  const calculateFaceLocation = result => {\n    const faceData = result.outputs[0].data.regions[0].region_info.bounding_box;\n    const imageInput = getElementById(\"imageInput\");\n    const width = Number(imageInput.width);\n    const height = Number(imageInput.height);\n    return {\n      leftCol: faceData.left_col * width,\n      topRow: faceData.top_row * height,\n      rightCol: width - faceData.right_col * width,\n      bottomRow: height - faceData.bottom_row * height\n    };\n  };\n  const displayFaceLocation = box => {\n    console.log(\"Box:\", box);\n    setBox(box);\n  };\n  const onInputChange = event => {\n    setInput(event.target.value);\n  };\n  const onButtonSubmit = () => {\n    const MODEL_ID = 'face-detection';\n    const MODEL_VERSION_ID = '6dc7e46bc9124c5c8824be4822abe105';\n    setImageUrl(input);\n    fetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/versions/\" + MODEL_VERSION_ID + \"/outputs\", returnClarifaiRequestOptions(input)).then(response => response.json()).then(result => displayFaceLocation(calculateFaceLocation(result))).catch(error => console.log('Ooops! There was an error', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n      className: \"particlesBg\",\n      num: 331,\n      type: \"fountain\",\n      bg: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImageProcessingField, {\n      onInputChange: onInputChange,\n      onButtonSubmit: onButtonSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Facerecognition, {\n      box: box,\n      imageUrl: imageUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"jcX3AUtM5tjS8FdVCSCe+OBNaRg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ParticlesBg","Navigation","Logo","Rank","ImageProcessingField","Facerecognition","jsxDEV","_jsxDEV","returnClarifaiRequestOptions","imageUrl","PAT","USER_ID","APP_ID","IMAGE_URL","raw","JSON","stringify","requestOptions","method","headers","body","App","_s","input","setInput","setImageUrl","box","setBox","calculateFaceLocation","result","faceData","outputs","data","regions","region_info","bounding_box","imageInput","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceLocation","console","log","onInputChange","event","target","value","onButtonSubmit","MODEL_ID","MODEL_VERSION_ID","fetch","then","response","json","catch","error","className","children","num","type","bg","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mungaii/Desktop/MUNGAII/Web Development/Projects/facerecognition/src/App.js"],"sourcesContent":["// import React, { Component } from 'react';\n// import './App.css';\n// import ParticlesBg from 'particles-bg';\n// import Navigation from './components/Navigation/Navigation';\n// import Logo from './components/Logo/Logo';\n// import Rank from './components/Rank/Rank';\n// import ImageProcessingField from './components/ImageProcessingField/ImageProcessingField';\n// import Facerecognition from './components/Facerecognition/Facerecognition';\n\n// const returnClarifaiRequestOptions = (imageUrl) => {\n//   // Your PAT (Personal Access Token) can be found in the Account's Security section\n//   const PAT = '70d2b99eec204856bc2886b35b22b05d';\n//   const USER_ID = 'ianthedeveloper';\n//   const APP_ID = 'my-first-application';\n//   const IMAGE_URL = imageUrl;\n  \n//   const raw = JSON.stringify({\n//     \"user_app_id\": {\n//         \"user_id\": USER_ID,\n//         \"app_id\": APP_ID\n//     },\n//     \"inputs\": [\n//         {\n//             \"data\": {\n//                 \"image\": {\n//                     \"url\": IMAGE_URL\n//                     // \"base64\": IMAGE_BYTES_STRING\n//                 }\n//             }\n//         }\n//     ]\n//   });\n\n//   const requestOptions = {\n//   method: 'POST',\n//   headers: {\n//         'Accept': 'application/json',\n//         'Authorization': 'Key ' + PAT\n//     },\n//     body: raw\n//   };\n\n//   return requestOptions;\n\n// }\n\n// class App extends Component {\n//   constructor(){\n//     super();\n//     this.state = {\n//         input: '',\n//         imageUrl: '',\n//         box: {},\n//     }\n//   }\n  \n//   calculateFaceLocation = (result) => {\n//     const faceData = result.outputs[0].data.regions[0].region_info.bounding_box;\n//     const imageInput = document.getElementById(\"imageInput\");\n//     const width = (imageInput.width);\n//     const height = (imageInput.height);\n\n//     return {\n//       leftCol: faceData.left_col * width,\n//       topRow: faceData.top_row * height,\n//       rightCol: width - (faceData.right_col * width),\n//       bottomRow: height - (faceData.bottom_row * height)\n//     }\n//   }\n\n//   displayFaceLocation = (box) => {\n//     console.log(\"Box:\", box)\n//     this.setState({box: box})\n//   }\n\n//   onInputChange = (event) => {\n//     // console.log(\"Input:\", event.target.value);\n//     this.setState({input: event.target.value});\n//   }\n\n\n//   onButtonSubmit = () => {\n//     const MODEL_ID = 'face-detection';\n//     const MODEL_VERSION_ID = '6dc7e46bc9124c5c8824be4822abe105';\n//     this.setState({imageUrl: this.state.input});\n\n//     fetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/versions/\" + MODEL_VERSION_ID + \"/outputs\", returnClarifaiRequestOptions(this.state.input))\n//     .then(response => response.json())\n//     .then(result => this.displayFaceLocation(this.calculateFaceLocation(result)))\n//     .catch(error => console.log('Ooops! There was an error', error));\n//   }\n\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <ParticlesBg className=\"particlesBg\" num={331} type=\"fountain\" bg={true} />\n//         <Navigation/>\n//         <Logo/>\n//         <Rank/>\n//         <ImageProcessingField \n//           onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}  \n//         />\n//         <Facerecognition box={this.state.box} imageUrl={this.state.imageUrl} />\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//MY PLAYGROUND\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport ParticlesBg from 'particles-bg';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport Rank from './components/Rank/Rank';\nimport ImageProcessingField from './components/ImageProcessingField/ImageProcessingField';\nimport Facerecognition from './components/Facerecognition/Facerecognition';\n\nconst returnClarifaiRequestOptions = (imageUrl) => {\n  // Your PAT (Personal Access Token) can be found in the Account's Security section\n  const PAT = '70d2b99eec204856bc2886b35b22b05d';\n  const USER_ID = 'ianthedeveloper';\n  const APP_ID = 'my-first-application';\n  const IMAGE_URL = imageUrl;\n  \n  const raw = JSON.stringify({\n    \"user_app_id\": {\n        \"user_id\": USER_ID,\n        \"app_id\": APP_ID\n    },\n    \"inputs\": [\n        {\n            \"data\": {\n                \"image\": {\n                    \"url\": IMAGE_URL\n                    // \"base64\": IMAGE_BYTES_STRING\n                }\n            }\n        }\n    ]\n  });\n\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT\n    },\n    body: raw\n  };\n\n  return requestOptions;\n}\n\nconst App = () => {\n  const [input, setInput] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [box, setBox] = useState({});\n\n  const calculateFaceLocation = (result) => {\n    const faceData = result.outputs[0].data.regions[0].region_info.bounding_box;\n    const imageInput = getElementById(\"imageInput\");\n    const width = Number(imageInput.width);\n    const height = Number(imageInput.height); \n\n    return {\n      leftCol: faceData.left_col * width,\n      topRow: faceData.top_row * height,\n      rightCol: width - (faceData.right_col * width),\n      bottomRow: height - (faceData.bottom_row * height)\n    }\n  }\n\n  const displayFaceLocation = (box) => {\n    console.log(\"Box:\", box)\n    setBox(box);\n  }\n\n  const onInputChange = (event) => {\n    setInput(event.target.value);\n  }\n\n  const onButtonSubmit = () => {\n    const MODEL_ID = 'face-detection';\n    const MODEL_VERSION_ID = '6dc7e46bc9124c5c8824be4822abe105';\n    setImageUrl(input);\n\n    fetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/versions/\" + MODEL_VERSION_ID + \"/outputs\", returnClarifaiRequestOptions(input))\n    .then(response => response.json())\n    .then(result => displayFaceLocation(calculateFaceLocation(result)))\n    .catch(error => console.log('Ooops! There was an error', error));\n  }\n\n  return (\n    <div className=\"App\">\n      <ParticlesBg className=\"particlesBg\" num={331} type=\"fountain\" bg={true} />\n      <Navigation/>\n      <Logo/>\n      <Rank/>\n      <ImageProcessingField \n        onInputChange={onInputChange} onButtonSubmit={onButtonSubmit}  \n      />\n      <Facerecognition box={box} imageUrl={imageUrl} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAgBA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,OAAOC,WAAW,MAAM,cAAc;AACtC,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,oBAAoB,MAAM,wDAAwD;AACzF,OAAOC,eAAe,MAAM,8CAA8C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3E,MAAMC,4BAA4B,GAAIC,QAAQ,IAAK;EACjD;EACA,MAAMC,GAAG,GAAG,kCAAkC;EAC9C,MAAMC,OAAO,GAAG,iBAAiB;EACjC,MAAMC,MAAM,GAAG,sBAAsB;EACrC,MAAMC,SAAS,GAAGJ,QAAQ;EAE1B,MAAMK,GAAG,GAAGC,IAAI,CAACC,SAAS,CAAC;IACzB,aAAa,EAAE;MACX,SAAS,EAAEL,OAAO;MAClB,QAAQ,EAAEC;IACd,CAAC;IACD,QAAQ,EAAE,CACN;MACI,MAAM,EAAE;QACJ,OAAO,EAAE;UACL,KAAK,EAAEC;UACP;QACJ;MACJ;IACJ,CAAC;EAEP,CAAC,CAAC;EAEF,MAAMI,cAAc,GAAG;IACrBC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,QAAQ,EAAE,kBAAkB;MAC5B,eAAe,EAAE,MAAM,GAAGT;IAC5B,CAAC;IACDU,IAAI,EAAEN;EACR,CAAC;EAED,OAAOG,cAAc;AACvB,CAAC;AAED,MAAMI,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,QAAQ,EAAEgB,WAAW,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC2B,GAAG,EAAEC,MAAM,CAAC,GAAG5B,QAAQ,CAAC,CAAC,CAAC,CAAC;EAElC,MAAM6B,qBAAqB,GAAIC,MAAM,IAAK;IACxC,MAAMC,QAAQ,GAAGD,MAAM,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,WAAW,CAACC,YAAY;IAC3E,MAAMC,UAAU,GAAGC,cAAc,CAAC,YAAY,CAAC;IAC/C,MAAMC,KAAK,GAAGC,MAAM,CAACH,UAAU,CAACE,KAAK,CAAC;IACtC,MAAME,MAAM,GAAGD,MAAM,CAACH,UAAU,CAACI,MAAM,CAAC;IAExC,OAAO;MACLC,OAAO,EAAEX,QAAQ,CAACY,QAAQ,GAAGJ,KAAK;MAClCK,MAAM,EAAEb,QAAQ,CAACc,OAAO,GAAGJ,MAAM;MACjCK,QAAQ,EAAEP,KAAK,GAAIR,QAAQ,CAACgB,SAAS,GAAGR,KAAM;MAC9CS,SAAS,EAAEP,MAAM,GAAIV,QAAQ,CAACkB,UAAU,GAAGR;IAC7C,CAAC;EACH,CAAC;EAED,MAAMS,mBAAmB,GAAIvB,GAAG,IAAK;IACnCwB,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEzB,GAAG,CAAC;IACxBC,MAAM,CAACD,GAAG,CAAC;EACb,CAAC;EAED,MAAM0B,aAAa,GAAIC,KAAK,IAAK;IAC/B7B,QAAQ,CAAC6B,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,QAAQ,GAAG,gBAAgB;IACjC,MAAMC,gBAAgB,GAAG,kCAAkC;IAC3DjC,WAAW,CAACF,KAAK,CAAC;IAElBoC,KAAK,CAAC,qCAAqC,GAAGF,QAAQ,GAAG,YAAY,GAAGC,gBAAgB,GAAG,UAAU,EAAElD,4BAA4B,CAACe,KAAK,CAAC,CAAC,CAC1IqC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAAC/B,MAAM,IAAIoB,mBAAmB,CAACrB,qBAAqB,CAACC,MAAM,CAAC,CAAC,CAAC,CAClEkC,KAAK,CAACC,KAAK,IAAId,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEa,KAAK,CAAC,CAAC;EAClE,CAAC;EAED,oBACEzD,OAAA;IAAK0D,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB3D,OAAA,CAACP,WAAW;MAACiE,SAAS,EAAC,aAAa;MAACE,GAAG,EAAE,GAAI;MAACC,IAAI,EAAC,UAAU;MAACC,EAAE,EAAE;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3ElE,OAAA,CAACN,UAAU;MAAAqE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACblE,OAAA,CAACL,IAAI;MAAAoE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACPlE,OAAA,CAACJ,IAAI;MAAAmE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACPlE,OAAA,CAACH,oBAAoB;MACnBgD,aAAa,EAAEA,aAAc;MAACI,cAAc,EAAEA;IAAe;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC,eACFlE,OAAA,CAACF,eAAe;MAACqB,GAAG,EAAEA,GAAI;MAACjB,QAAQ,EAAEA;IAAS;MAAA6D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV,CAAC;AAAAnD,EAAA,CAnDKD,GAAG;AAAAqD,EAAA,GAAHrD,GAAG;AAqDT,eAAeA,GAAG;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}